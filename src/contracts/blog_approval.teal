#pragma version 6
txn ApplicationID
int 0
==
bnz main_l4
txna ApplicationArgs 0
byte "buyCoffee"
==
bnz main_l3
err
main_l3:
byte "COFFEECOUNT"
byte "COFFEECOUNT"
app_global_get
txna ApplicationArgs 1
btoi
+
app_global_put
int 1
return
main_l4:
txn NumAppArgs
int 4
==
assert
txn Note
byte "algohall:uv0"
==
assert
txna ApplicationArgs 2
callsub storecontent_1
byte "SLUG"
txna ApplicationArgs 0
app_global_put
byte "TITLE"
txna ApplicationArgs 1
app_global_put
byte "THUMBNAIL"
txna ApplicationArgs 3
app_global_put
byte "AUTHOR"
txn Sender
app_global_put
byte "DATEPUBLISHED"
global LatestTimestamp
app_global_put
byte "COFFEECOUNT"
int 0
app_global_put
int 1
return

// convert_uint_to_bytes
convertuinttobytes_0:
store 7
load 7
int 0
==
bnz convertuinttobytes_0_l5
byte ""
store 8
load 7
store 9
convertuinttobytes_0_l2:
load 9
int 0
>
bnz convertuinttobytes_0_l4
load 8
b convertuinttobytes_0_l6
convertuinttobytes_0_l4:
load 9
int 10
%
store 10
byte "0123456789"
load 10
load 10
int 1
+
substring3
load 8
concat
store 8
load 9
int 10
/
store 9
b convertuinttobytes_0_l2
convertuinttobytes_0_l5:
byte "0"
convertuinttobytes_0_l6:
retsub

// store_content
storecontent_1:
store 0
load 0
len
store 2
int 0
store 1
storecontent_1_l1:
load 1
int 8
<
bz storecontent_1_l7
load 1
callsub convertuinttobytes_0
store 6
int 127
load 1
*
store 4
load 2
int 0
==
bnz storecontent_1_l7
load 2
int 127
>
bnz storecontent_1_l6
load 2
store 3
load 2
load 3
-
store 2
storecontent_1_l5:
load 0
load 4
load 3
extract3
store 5
load 6
load 5
app_global_put
load 1
int 1
+
store 1
b storecontent_1_l1
storecontent_1_l6:
load 2
int 127
-
store 2
int 127
store 3
b storecontent_1_l5
storecontent_1_l7:
retsub